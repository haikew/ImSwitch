# Use an appropriate base image for Jetson Nano
# sudo docker build -t imswitch_hik .
# sudo docker run -it --privileged  imswitch_hik
# docker stop imswitch_hik
# sudo docker inspect imswitch_hik
# docker run --privileged -it imswitch_hik
# sudo docker run -it --rm -p 8001:8001 -p 2222:22 -e HEADLESS=1 -e HTTP_PORT=8001 -e CONFIG_FILE=example_virtual_microscope.json -e UPDATE_GIT=0 -e UPDATE_CONFIG=0 --privileged imswitch_hik
# sudo docker run -it --rm -p 8001:8001 -p 2222:22 -e HEADLESS=1 -e HTTP_PORT=8001 -e CONFIG_FILE=example_uc2_hik_flowstop.json -e UPDATE_GIT=1 -e UPDATE_CONFIG=0 --privileged imswitch_hik
# performs python3 /opt/MVS/Samples/aarch64/Python/MvImport/GrabImage.py

# Use an appropriate base image for Jetson Nano
# docker build -t imswitch_hik .
#

FROM --platform=linux/arm64/v8 ubuntu:22.04

ENV TZ=America/Los_Angeles

# Install necessary dependencies
RUN apt-get update && apt-get install -y \
    wget \
    unzip \
    python3 \
    python3-pip \
    build-essential \
    git \
    mesa-utils \
    openssh-server \
    libhdf5-dev \
    usbutils \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*


RUN cd /tmp && \
    wget https://www.hikrobotics.com/cn2/source/support/software/MVS_STD_GML_V2.1.2_231116.zip && \
    unzip MVS_STD_GML_V2.1.2_231116.zip && \
    dpkg -i MVS-2.1.2_aarch64_20231116.deb

RUN mkdir -p /opt/MVS/bin/fonts
# Source the bashrc file
RUN echo "source ~/.bashrc" >> ~/.bashrc
RUN /bin/bash -c "source ~/.bashrc"

# Copy the necessary Python script
RUN cd /opt/MVS/Samples/aarch64/Python/ && \
    cp GrabImage/GrabImage.py MvImport/GrabImage.py

# Set environment variable for MVCAM_COMMON_RUNENV
#ENV MVCAM_COMMON_RUNENV=/opt/MVS
ENV MVCAM_COMMON_RUNENV=/opt/MVS/lib LD_LIBRARY_PATH=/opt/MVS/lib/64:/opt/MVS/lib/32:$LD_LIBRARY_PATH

# Install Miniforge
RUN wget --quiet https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh -O /tmp/miniforge.sh && \
    /bin/bash /tmp/miniforge.sh -b -p /opt/conda && \
    rm /tmp/miniforge.sh

# Update PATH environment variable
ENV PATH=/opt/conda/bin:$PATH

# Create conda environment and install packages
RUN /opt/conda/bin/conda create -y --name imswitch python=3.10

RUN /opt/conda/bin/conda install -n imswitch -y -c conda-forge h5py numcodecs && \
    conda clean --all -f -y


# Clone the config folder
RUN git clone https://github.com/openUC2/ImSwitchConfig /root/ImSwitchConfig 

# Clone the repository and install dependencies
RUN git clone https://github.com/openUC2/imSwitch /tmp/ImSwitch && \
    cd /tmp/ImSwitch && \
    git checkout NOQT && \
    /bin/bash -c "source /opt/conda/bin/activate imswitch && pip install -e /tmp/ImSwitch" 

# Install UC2-REST
RUN git clone https://github.com/openUC2/UC2-REST /tmp/UC2-REST && \
    cd /tmp/UC2-REST && \
    /bin/bash -c "source /opt/conda/bin/activate imswitch && pip install -e /tmp/UC2-REST"

# Setup SSH server
RUN mkdir /var/run/sshd && \
    echo 'root:password' | chpasswd && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd



# Create a startup script
COPY start_ssh.sh /start_ssh.sh
RUN chmod +x /start_ssh.sh

# Expose SSH port and HTTP port
EXPOSE 22 8001

# Set the entrypoint to the startup script
ENTRYPOINT ["/start_ssh.sh"]


# Run the Python script
#CMD ["python3", "/opt/MVS/Samples/aarch64/Python/MvImport/GrabImage.py"]

